shiny::runApp()
library(tidyverse)
truth <- read_tsv("../../sessions/14_trees/truth.tsv")
runApp()
runApp()
truth
truth %>% count(species)
baseline <- truth %>% mutate(species="Quercus ilex")
baseline
baseline %>% write_tsv("baseline.tsv")
truth <- read_tsv("../../sessions/14_trees/truth.tsv") %>% rename(truth=species)
left_join(truth, baseline)
left_join(truth, baseline) %>% mutate(correct=(truth==species))
left_join(truth, baseline) %>% mutate(correct=(truth==species)) %>% count(correct)
runApp()
left_join(truth, baseline) %>%
mutate(correct=(truth==species)) %>%
count(species, truth) %>%
complete(species, truth)
left_join(truth, baseline) %>%
mutate(correct=(truth==species)) %>%
count(species, truth) %>%
complete
left_join(truth, baseline) %>%
mutate(correct=(truth==species)) %>%
count(species, truth)
left_join(truth, baseline) %>%
mutate(correct=(truth==species)) %>%
count(species, truth) %>% complete(fill=n)
left_join(truth, baseline) %>%
mutate(correct=(truth==species)) %>%
count(species, truth) %>% complete(fill=list(n=0))
left_join(truth, baseline) %>%
mutate(correct=(truth==species)) %>%
count(species, truth) %>%
complete(species, truth)
left_join(truth, baseline) %>%
mutate(correct=(truth==species)) %>%
count(species, truth) %>%
complete(species, truth, n)
left_join(truth, baseline) %>%
mutate(correct=(truth==species)) %>%
count(species, truth) %>%
complete(species)
pred <- baseline %>% mutate(pred=as_factor(species,levels=unique(truth$truth)))
?as_factor
pred <- baseline %>% mutate(pred=fct_relevel(species,levels=unique(truth$truth)))
pred <- baseline %>% mutate(pred=fct_recode(species,levels=unique(truth$truth)))
pred <- baseline %>% mutate(pred=as.factor(species,levels=unique(truth$truth)))
?as.factor
unique(truth$truth)
pred <- baseline %>% mutate(pred=as.factor(species,levels=unique(truth$truth)))
as.factor(baseline$species,levels=unique(truth$truth))
as.factor(baseline$species,levels=unique(truth$truth))
pred <- baseline %>% mutate(pred=factor(species,levels=unique(truth$truth)))
pred
left_join(truth, pred) %>%
mutate(correct=(truth==species)) %>%
count(species, truth) %>%
complete(species, truth)
pred <- baseline %>% mutate(species=factor(species,levels=unique(truth$truth)))
left_join(truth, pred) %>%
mutate(correct=(truth==species)) %>%
count(species, truth) %>%
complete(species, truth)
left_join(truth, pred) %>%
mutate(correct=(truth==species)) %>%
count(species, truth) %>%
complete(species, truth, fill=list(n=0))
runApp()
runApp()
library(gt)
install.packages("gt")
library(gt)
runApp()
library(shiny)
runExample("03_reactivity")
runApp()
runExample("03_reactivity")
runApp()
runExample("03_reactivity")
runApp()
truth <- read_tsv("../../sessions/14_trees/truth.tsv")
truth
truth %>% mutate(species = sample(unique(species),n(),replace=T))
truth %>% mutate(species = sample(unique(species),n(),replace=T)) %>% write_tsv("random.tsv")
runApp()
install.packages(mtools)
install.packages("mtools")
library(mltools)
install.packages("mltools")
runApp()
shiny::runApp()
